plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    id "dagger.hilt.android.plugin"
    id "org.jlleitschuh.gradle.ktlint" version "10.2.0"
}

android {
    compileSdkVersion(Constants.compileSdkVersion)

    defaultConfig {
        applicationId("com.rl.solar")
        minSdkVersion(Constants.minSdkVersion)
        targetSdkVersion(Constants.targetSdkVersion)
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.rl.solar.HiltTestRunner"
        proguardFiles

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"
                ]
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    testOptions.unitTests {
        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }

        returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

apply from: './ktlint.gradle'

kapt {
    arguments {
        // Make Hilt share the same definition of Components in tests instead of
        // creating a new set of Components per test class.
        arg("dagger.hilt.shareTestComponents", "true")
    }
}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {
    // App dependencies
    implementation "androidx.appcompat:appcompat:${Constants.appCompatVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${Constants.constraintLayoutVersion}"
    implementation "androidx.core:core-ktx:${Constants.androidCoreKtxVersion}"
    implementation "androidx.legacy:legacy-support-v4:${Constants.androidXLegacySupportVersion}"
    implementation "com.github.bumptech.glide:glide:${Constants.glideVersion}"
    kapt "com.github.bumptech.glide:compiler:${Constants.glideVersion}"
    implementation "com.google.android.material:material:${Constants.materialVersion}"
    implementation "com.jakewharton.timber:timber:${Constants.timberVersion}"

    // Architecture Components
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${Constants.archLifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${Constants.archLifecycleVersion}"
    implementation "androidx.navigation:navigation-fragment-ktx:${Constants.navigationVersion}"
    implementation "androidx.navigation:navigation-ui-ktx:${Constants.navigationVersion}"

    // Hilt
    implementation "com.google.dagger:hilt-android:${Constants.hiltVersion}"
    kapt "com.google.dagger:hilt-compiler:${Constants.hiltVersion}"

    // Hilt testing
    androidTestImplementation "com.google.dagger:hilt-android-testing:${Constants.hiltVersion}"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:${Constants.hiltVersion}"

    // Room
    implementation "androidx.room:room-runtime:${Constants.roomVersion}"
    kapt "androidx.room:room-compiler:${Constants.roomVersion}"

    // Room testing
    implementation "androidx.room:room-ktx:${Constants.roomVersion}"

    // Dependencies for local unit tests
    testImplementation "junit:junit:${Constants.junitVersion}"
    testImplementation "androidx.arch.core:core-testing:${Constants.archTestingVersion}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Constants.coroutinesVersion}"
    testImplementation "androidx.navigation:navigation-testing:${Constants.navigationVersion}"
    testImplementation "androidx.test.espresso:espresso-core:${Constants.espressoVersion}"
    testImplementation "com.google.truth:truth:${Constants.truthVersion}"
    testImplementation "app.cash.turbine:turbine:${Constants.turbineVersion}"
    testImplementation "io.mockk:mockk:${Constants.mockkVersion}"

    // Dependencies for Android unit tests
    androidTestImplementation "androidx.test.espresso:espresso-core:${Constants.espressoVersion}"
    androidTestImplementation "androidx.navigation:navigation-testing:${Constants.navigationVersion}"
    androidTestImplementation "com.google.truth:truth:${Constants.truthVersion}"
    androidTestImplementation "io.mockk:mockk-android:${Constants.mockkVersion}"

    // AndroidX Test - JVM testing
    debugImplementation("androidx.fragment:fragment-testing:${Constants.fragmentTestingVersion}")

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test.ext:junit:${Constants.junitExtVersion}"

    // Kotlin
    implementation "androidx.fragment:fragment-ktx:${Constants.fragmentKtxVersion}"
}
